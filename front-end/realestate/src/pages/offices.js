import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google' 
const inter = Inter({ subsets: ['latin'] })
import BuildingCard from '@/components/buildingCard' 
import axios from 'axios'
import { useState,useEffect } from 'react'
import ReactPaginate from 'react-paginate'
import { useRouter } from 'next/router'
import NavbarComponent from '@/components/navbar'
export default function Home() {
  const router = useRouter()
  const [offices, setOffices] = useState([])


useEffect(() => {
  axios.get('https://testing.tvikonekretnine.com/api/offices.php').then((res) => {
    setOffices(res.data)
    console.log(res.data)
  } ) 
}, [])
 

function Items({ currentItems }) {
  return (
    <>
      {currentItems &&
        currentItems.map((item,key) => (
          <div className="card-office" key={key} onClick={() => {
            router.push({
              pathname:'/office',
              query:{id:item.id}
            })
            console.log('ok')
          }} >
            <img src={`https://testing.tvikonekretnine.com/${item.main_image}`} lt="card image" class="cardImg" ></img>
            <div className="onSale c-info">{item.is_completed? "U IZGRADNJI" :  "USELJIV OBJEKAT" }</div>
          <div className="c-info">{item.squarefeet}</div>
          <div className="floors c-info">{item.stage}</div> 
        </div>
        ))}
    </>
  );
}

function PaginatedItems({ itemsPerPage }) {
  // Here we use item offsets; we could also use page offsets
  // following the API or data you're working with.
  const [itemOffset, setItemOffset] = useState(0);

  // Simulate fetching items from another resources.
  // (This could be items from props; or items loaded in a local state
  // from an API endpoint with useEffect and useState)
  const endOffset = itemOffset + itemsPerPage;
  console.log(`Loading items from ${itemOffset} to ${endOffset}`);
  let currentItems = [] ; 
  offices.map((el,k) => {
    currentItems[k] = (el)
  })
    currentItems = offices.slice(itemOffset, endOffset);
  const pageCount = Math.ceil(offices.length / itemsPerPage);

  // Invoke when user click to request another page.
  const handlePageClick = (event) => {
    const newOffset = (event.selected * itemsPerPage) % offices.length;
    console.log(
      `User requested page number ${event.selected}, which is offset ${newOffset}`
    );
    setItemOffset(newOffset);
  };

  return (
    <>

        
    <div class="card-wrapper">
    <Items currentItems={currentItems} />
    </div>
       <div class="next-prev">
      <div class="">
      <ReactPaginate 
        nextLabel='>'
        containerClassName='btns'
        onPageChange={handlePageClick}
        pageRangeDisplayed={1}
        pageCount={pageCount}
        previousLabel="<"
        renderOnZeroPageCount={null}
      />
        </div>  
      </div>
   
    </>
  );
}

  return (
    <>
      <Head>
        <title>Real Estate </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        
<script async src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous" />
<script async src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js" integrity="sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW" crossorigin="anonymous"></script>
<link
          href="https://fonts.googleapis.com/css2?family=Montserrat:wght@200;400&display=swap"
          rel="stylesheet"
        />
        <link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css"
  integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65"
  crossorigin="anonymous"
/>
      </Head>

      <NavbarComponent/>
      <div class="background-section-office">
      <h2>LOKALI</h2>
    </div>
    <div className='container' >
 
     <PaginatedItems itemsPerPage={12} />,
   
    
    </div>
    </>
  )
}
